{"version":3,"sources":["components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/ExpenseDate.js","components/Expenses/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expense.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["ChartBar","props","barFillHeight","maxValue","Math","round","value","className","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","title","ExpensesFilter","selected","onChange","event","onChangeFilter","target","Expense","useState","filteredYear","setFilteredYear","filteredExpenses","items","filter","toString","selectedYear","console","log","length","id","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","placeholder","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.686edb73.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { month: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year} </div>\n    </div>\n  );\n}\nexport default ExpenseDate;\n","import \"./Card.css\";\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\nexport default Card;\n","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"./UI/Card\";\nimport React from \"react\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\" expense-item__description\">\n        <h2> {props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React, { useState } from \"react\";\nimport ExpensesChart from \"./ExpenseChart\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter.js\";\nimport \"./Expense.css\";\nimport Card from \"./UI/Card\";\n\nfunction Expense(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        {filteredExpenses.length === 0 && (\n          <p className=\"none\">No expenses found</p>\n        )}\n        {filteredExpenses.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))}\n      </Card>\n    </div>\n  );\n}\nexport default Expense;\n","import \"./ExpenseForm.css\";\nimport React, { useState } from \"react\";\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangedHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredDate(\"\");\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>amount</label>\n          <input\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>date</label>\n          <input\n            placeholder=\"mm/dd/yyyy\"\n            value={enteredDate}\n            onChange={dateChangedHandler}\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n          />\n        </div>\n      </div>\n      <div className=\" new-expense__actions\">\n        {\" \"}\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = { ...enteredExpenseData, id: Math.random().toString() };\n    props.onAddExpense(expenseData);\n  };\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import Expense from \"./components/Expenses/Expense.js\";\nimport NewExpense from \"./components/NewExpense/NewExpense.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nconst DUMMY = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n\n      <Expense items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}